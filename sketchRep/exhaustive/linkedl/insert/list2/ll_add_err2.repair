/* BEGIN PACKAGE ANONYMOUS*/
struct Entry {
    Entry next;
    int element;
}
struct LinkedList {
    Entry head;
    int size;
}
/*ll_add_err2.sk12:12*/

void insertHarness ()/*ll_add_err2.sk12:12*/
{
  LinkedList@ANONYMOUS l_s2_1 = null;
  newList(l_s2_1);
  assert ((l_s2_1.head.next) == (l_s2_1.head)); //Assert at ll_add_err2.sk12:19 (2333659522840353681)
  assert ((l_s2_1.size) == 0); //Assert at ll_add_err2.sk12:20 (-8784061025207464422)
  LinkedList@ANONYMOUS l_s4_2 = null;
  newList(l_s4_2);
  insertSort(l_s4_2, 22);
  assert ((l_s4_2.head.next.element) == 22); //Assert at ll_add_err2.sk12:25 (-8479205204393383740)
  assert ((l_s4_2.head.next.next) == (l_s4_2.head)); //Assert at ll_add_err2.sk12:26 (-4301441775769725101)
  assert ((l_s4_2.size) == 1); //Assert at ll_add_err2.sk12:27 (4349759618577978434)
  LinkedList@ANONYMOUS l_s6_3 = null;
  newList(l_s6_3);
  insertSort(l_s6_3, 3);
  insertSort(l_s6_3, 3);
  assert ((l_s6_3.head.next.element) == 3); //Assert at ll_add_err2.sk12:33 (-1216352175241770561)
  assert ((l_s6_3.head.next.next.element) == 3); //Assert at ll_add_err2.sk12:34 (-7546897888871075262)
  assert ((l_s6_3.head.next.next.next) == (l_s6_3.head)); //Assert at ll_add_err2.sk12:35 (6340285115292197924)
  assert ((l_s6_3.size) == 2); //Assert at ll_add_err2.sk12:36 (-2871111709332206683)
}
/*ll_add_err2.sk12:40*/

void insertHarness__Wrapper ()  implements insertHarness__WrapperNospec/*ll_add_err2.sk12:40*/
{
  insertHarness();
}
/*ll_add_err2.sk12:46*/

void insertHarness__WrapperNospec ()/*ll_add_err2.sk12:46*/
{ }
/*ll_add_err2.sk12:51*/

void insertSort (LinkedList l_5, int v_6)/*ll_add_err2.sk12:51*/
{
  Entry@ANONYMOUS in_s8_8 = null;
  newEntry(in_s8_8);
  in_s8_8.element = v_6;
  Entry@ANONYMOUS e_9 = l_5.head;
  bit __sa0_a = ((e_9.next) != (l_5.head)) && ((e_9.next.element) < v_6);
  Entry@ANONYMOUS _tmprhs_s1 = e_9.next;
  in_s8_8.next = _tmprhs_s1;
  while(__sa0_a)
  {
    e_9 = e_9.next;
    __sa0_a = ((e_9.next) != (l_5.head)) && ((e_9.next.element) < v_6);
  }
  e_9.next = in_s8_8;
  l_5.size = (l_5.size) + 1;
  return;
}
/*ll_add_err2.sk12:90*/

void newEntry (ref Entry _out_b)/*ll_add_err2.sk12:90*/
{
  _out_b = null;
  _out_b = new Entry();
  _out_b.next = null;
  return;
}
/*ll_add_err2.sk12:99*/

void newList (ref LinkedList _out_4)/*ll_add_err2.sk12:99*/
{
  _out_4 = null;
  _out_4 = new LinkedList();
  _out_4.head = new Entry();
  _out_4.head.next = _out_4.head;
  _out_4.size = 0;
  return;
}
/* END PACKAGE ANONYMOUS*/
