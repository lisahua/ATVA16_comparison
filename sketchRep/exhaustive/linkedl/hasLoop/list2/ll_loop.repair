/* BEGIN PACKAGE ANONYMOUS*/
struct Entry {
    Entry next;
    int element;
}
struct LinkedList {
    Entry head;
    int size;
}
/*ll_loop.sk71:12*/

void hasLoop (LinkedList l_c, ref bit _out_d)/*ll_loop.sk71:12*/
{
  _out_d = 0;
  Entry@ANONYMOUS ln1_e = l_c.head;
  Entry@ANONYMOUS ln2_f = l_c.head;
  while(1)
  {
    if(((ln2_f.next) == (l_c.head)) || ((ln2_f.next.next) == (l_c.head)))/*ll_loop.sk71:25*/
    {
      _out_d = 1;
      return;
    }
    ln2_f = ln2_f.next.next;
    Entry@ANONYMOUS _tmprhs_s1 = ln1_e.next;
    ln1_e = _tmprhs_s1;
    if(_tmprhs_s1 == ln2_f)/*ll_loop.sk71:37*/
    {
      _out_d = 0;
      return;
    }
  }
  _out_d = 1;
  return;
}
/*ll_loop.sk71:55*/

void insertHarness ()/*ll_loop.sk71:55*/
{
  LinkedList@ANONYMOUS l_s1_1 = null;
  newList(l_s1_1);
  bit _out_s3_2 = 0;
  hasLoop(l_s1_1, _out_s3_2);
  assert (_out_s3_2 == 1); //Assert at ll_loop.sk71:64 (-6041539550629124172)
  assert ((l_s1_1.head.next) == (l_s1_1.head)); //Assert at ll_loop.sk71:65 (-926615055985373332)
  LinkedList@ANONYMOUS l_s5_3 = null;
  newList(l_s5_3);
  Entry@ANONYMOUS n_4 = new Entry();
  n_4.element = 22;
  n_4.next = l_s5_3.head;
  l_s5_3.head.next = n_4;
  bit _out_s7_5 = 0;
  hasLoop(l_s5_3, _out_s7_5);
  assert (_out_s7_5 == 1); //Assert at ll_loop.sk71:76 (7571609335609119891)
  assert ((l_s5_3.head.next.element) == 22); //Assert at ll_loop.sk71:77 (-3895707221618944247)
  assert ((l_s5_3.head.next.next) == (l_s5_3.head)); //Assert at ll_loop.sk71:78 (3375728160015304969)
  n_4.next = n_4;
  bit _out_s9_6 = 0;
  hasLoop(l_s5_3, _out_s9_6);
  assert (_out_s9_6 == 0); //Assert at ll_loop.sk71:82 (7513066095847405931)
  LinkedList@ANONYMOUS l_s11_7 = null;
  newList(l_s11_7);
  n_4 = new Entry();
  n_4.element = 22;
  Entry@ANONYMOUS e_8 = new Entry();
  e_8.element = 3;
  l_s11_7.head.next = e_8;
  e_8.next = n_4;
  n_4.next = l_s11_7.head;
  bit _out_s13_9 = 0;
  hasLoop(l_s11_7, _out_s13_9);
  assert (_out_s13_9 == 1); //Assert at ll_loop.sk71:96 (-7369188455004600646)
  assert ((l_s11_7.head.next) == e_8); //Assert at ll_loop.sk71:97 (7114976653574107324)
  assert ((l_s11_7.head.next.next) == n_4); //Assert at ll_loop.sk71:98 (-441935947717921803)
  assert ((l_s11_7.head.next.next.next) == (l_s11_7.head)); //Assert at ll_loop.sk71:99 (9044213066145823256)
  n_4.next = e_8;
  bit _out_s15_a = 0;
  hasLoop(l_s11_7, _out_s15_a);
  assert (_out_s15_a == 0); //Assert at ll_loop.sk71:103 (-6563711973263938856)
}
/*ll_loop.sk71:107*/

void insertHarness__Wrapper ()  implements insertHarness__WrapperNospec/*ll_loop.sk71:107*/
{
  insertHarness();
}
/*ll_loop.sk71:113*/

void insertHarness__WrapperNospec ()/*ll_loop.sk71:113*/
{ }
/*ll_loop.sk71:118*/

void newList (ref LinkedList _out_b)/*ll_loop.sk71:118*/
{
  _out_b = null;
  _out_b = new LinkedList();
  _out_b.head = new Entry();
  _out_b.head.next = _out_b.head;
  _out_b.size = 0;
  return;
}
/* END PACKAGE ANONYMOUS*/
