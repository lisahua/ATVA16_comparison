/* BEGIN PACKAGE ANONYMOUS*/
struct Entry {
    int element;
    Entry next;
    Entry previous;
}
struct LinkedList {
    Entry head;
    int size;
}
/*dll_add.sk113:13*/

void addFirst (LinkedList l_7, int v_8_0)/*dll_add.sk113:13*/
{
  Entry@ANONYMOUS e_s9_a = null;
  newEntry(e_s9_a);
  e_s9_a.element = v_8_0;
  e_s9_a.previous = l_7.head;
  Entry@ANONYMOUS _tmprhs_s1 = e_s9_a.previous.next;
  e_s9_a.next = _tmprhs_s1;
  e_s9_a.element = v_8_0;
  int _tmprhs_s7 = (l_7.size) + 1;
  l_7.size = _tmprhs_s7;
  e_s9_a.previous.next = e_s9_a;
  e_s9_a.next.previous = e_s9_a;
}
/*dll_add.sk113:36*/

void addFrontHarness ()/*dll_add.sk113:36*/
{
  LinkedList@ANONYMOUS l_s1_1 = null;
  newList(l_s1_1);
  assert ((l_s1_1.size) == 0); //Assert at dll_add.sk113:42 (6201233115597872021)
  assert ((l_s1_1.head.next) == (l_s1_1.head)); //Assert at dll_add.sk113:43 (-689895190484607516)
  assert ((l_s1_1.head.previous) == (l_s1_1.head)); //Assert at dll_add.sk113:44 (-2561540770983556607)
  assert ((l_s1_1.head.element) == 0); //Assert at dll_add.sk113:45 (-8819256770446270132)
  LinkedList@ANONYMOUS l_s3_2 = null;
  newList(l_s3_2);
  addFirst(l_s3_2, 8);
  assert ((l_s3_2.head.next.element) == 8); //Assert at dll_add.sk113:50 (5725310490653275459)
  assert ((l_s3_2.head.next.previous) == (l_s3_2.head)); //Assert at dll_add.sk113:51 (-8531890194142526120)
  assert ((l_s3_2.head.next.next) == (l_s3_2.head)); //Assert at dll_add.sk113:52 (-7240951954217155761)
  assert ((l_s3_2.size) == 1); //Assert at dll_add.sk113:53 (-7263836072770273331)
  assert ((l_s3_2.head.element) == 0); //Assert at dll_add.sk113:54 (-7482410218167642936)
  LinkedList@ANONYMOUS l_s5_3 = null;
  newList(l_s5_3);
  addFirst(l_s5_3, 8);
  addFirst(l_s5_3, 5);
  assert ((l_s5_3.head.next.element) == 5); //Assert at dll_add.sk113:60 (-1104595893941371852)
  assert ((l_s5_3.head.next.previous) == (l_s5_3.head)); //Assert at dll_add.sk113:61 (-756036328968922096)
  assert ((l_s5_3.head.next.next.element) == 8); //Assert at dll_add.sk113:62 (-8440988845418769012)
  assert ((l_s5_3.head.element) == 0); //Assert at dll_add.sk113:63 (225738618080431590)
  assert ((l_s5_3.head.next.next.element) == 8); //Assert at dll_add.sk113:64 (4584883673499028792)
  assert ((l_s5_3.head.next.next.previous.element) == 5); //Assert at dll_add.sk113:65 (-6937857344687721458)
  assert ((l_s5_3.head.next.next.next) == (l_s5_3.head)); //Assert at dll_add.sk113:66 (-6168382061664511732)
  assert ((l_s5_3.size) == 2); //Assert at dll_add.sk113:67 (1127262675091669959)
  assert ((l_s5_3.head.element) == 0); //Assert at dll_add.sk113:68 (4537724272329947747)
  LinkedList@ANONYMOUS l_s7_4 = null;
  newList(l_s7_4);
  addFirst(l_s7_4, 8);
  addFirst(l_s7_4, 5);
  addFirst(l_s7_4, 13);
  assert ((l_s7_4.head.next.element) == 13); //Assert at dll_add.sk113:75 (-708907632851237917)
  assert ((l_s7_4.head.next.previous) == (l_s7_4.head)); //Assert at dll_add.sk113:76 (-5629347463352330149)
  assert ((l_s7_4.head.next.next.element) == 5); //Assert at dll_add.sk113:77 (-5172979813275449304)
  assert ((l_s7_4.head.element) == 0); //Assert at dll_add.sk113:78 (-1746558537613490364)
  assert ((l_s7_4.head.next.next.element) == 5); //Assert at dll_add.sk113:79 (1201648557232605239)
  assert ((l_s7_4.head.next.next.previous.element) == 13); //Assert at dll_add.sk113:80 (832341187617216387)
  assert ((l_s7_4.head.next.next.next.element) == 8); //Assert at dll_add.sk113:81 (3245677275150621771)
  assert ((l_s7_4.head.element) == 0); //Assert at dll_add.sk113:82 (-6345674143886564025)
  assert ((l_s7_4.head.next.next.next.element) == 8); //Assert at dll_add.sk113:83 (-8231857171209273358)
  assert ((l_s7_4.head.next.next.next.previous.element) == 5); //Assert at dll_add.sk113:84 (-8445851444050674673)
  assert ((l_s7_4.head.next.next.next.next) == (l_s7_4.head)); //Assert at dll_add.sk113:85 (5678531024330979275)
  assert ((l_s7_4.head.element) == 0); //Assert at dll_add.sk113:86 (-3250853364581726125)
  assert ((l_s7_4.size) == 3); //Assert at dll_add.sk113:87 (-2332056893876122739)
}
/*dll_add.sk113:91*/

void addFrontHarness__Wrapper ()  implements addFrontHarness__WrapperNospec/*dll_add.sk113:91*/
{
  addFrontHarness();
}
/*dll_add.sk113:97*/

void addFrontHarness__WrapperNospec ()/*dll_add.sk113:97*/
{ }
/*dll_add.sk113:102*/

void newEntry (ref Entry _out_b)/*dll_add.sk113:102*/
{
  _out_b = null;
  _out_b = new Entry();
  _out_b.previous = null;
  _out_b.next = null;
  return;
}
/*dll_add.sk113:112*/

void newList (ref LinkedList _out_5)/*dll_add.sk113:112*/
{
  _out_5 = null;
  _out_5 = new LinkedList();
  Entry@ANONYMOUS _out_s11_6 = null;
  newEntry(_out_s11_6);
  _out_5.head = _out_s11_6;
  _out_5.head.next = _out_5.head;
  _out_5.head.previous = _out_5.head;
  _out_5.size = 0;
  return;
}
/* END PACKAGE ANONYMOUS*/
