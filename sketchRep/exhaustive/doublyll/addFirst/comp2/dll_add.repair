/* BEGIN PACKAGE ANONYMOUS*/
struct Entry {
    int element;
    Entry next;
    Entry previous;
}
struct LinkedList {
    Entry head;
    int size;
}
/*dll_add.sk49:13*/

void addFirst (LinkedList l_7, int v_8_0)/*dll_add.sk49:13*/
{
  Entry@ANONYMOUS e_s9_a = null;
  newEntry(e_s9_a);
  e_s9_a.element = v_8_0;
  e_s9_a.next = l_7.head.next;
  e_s9_a.previous = l_7.head;
  e_s9_a.previous.next = e_s9_a;
  e_s9_a.next.previous = e_s9_a;
  int _tmprhs_s4 = l_7.size;
  l_7.size = _tmprhs_s4 + 1;
}
/*dll_add.sk49:36*/

void addFrontHarness ()/*dll_add.sk49:36*/
{
  LinkedList@ANONYMOUS l_s1_1 = null;
  newList(l_s1_1);
  assert ((l_s1_1.size) == 0); //Assert at dll_add.sk49:42 (-4377231512253015306)
  assert ((l_s1_1.head.next) == (l_s1_1.head)); //Assert at dll_add.sk49:43 (-3755525937834436491)
  assert ((l_s1_1.head.previous) == (l_s1_1.head)); //Assert at dll_add.sk49:44 (-8275184469530996439)
  LinkedList@ANONYMOUS l_s3_2 = null;
  newList(l_s3_2);
  addFirst(l_s3_2, 8);
  assert ((l_s3_2.head.next.element) == 8); //Assert at dll_add.sk49:49 (721550387227083908)
  assert ((l_s3_2.head.next.previous) == (l_s3_2.head)); //Assert at dll_add.sk49:50 (-612533629620153137)
  assert ((l_s3_2.head.next.next) == (l_s3_2.head)); //Assert at dll_add.sk49:51 (3933574967225960490)
  assert ((l_s3_2.size) == 1); //Assert at dll_add.sk49:52 (-7041477719292996744)
  LinkedList@ANONYMOUS l_s5_3 = null;
  newList(l_s5_3);
  addFirst(l_s5_3, 8);
  addFirst(l_s5_3, 5);
  assert ((l_s5_3.head.next.element) == 5); //Assert at dll_add.sk49:58 (8461940419704588566)
  assert ((l_s5_3.head.next.previous) == (l_s5_3.head)); //Assert at dll_add.sk49:59 (5587245735709783759)
  assert ((l_s5_3.head.next.next.element) == 8); //Assert at dll_add.sk49:60 (1792750681397332054)
  assert ((l_s5_3.head.next.next.element) == 8); //Assert at dll_add.sk49:61 (-7056579776682674475)
  assert ((l_s5_3.head.next.next.previous.element) == 5); //Assert at dll_add.sk49:62 (8633457266791204372)
  assert ((l_s5_3.head.next.next.next) == (l_s5_3.head)); //Assert at dll_add.sk49:63 (2662821197480923170)
  assert ((l_s5_3.size) == 2); //Assert at dll_add.sk49:64 (7827176082865375102)
  LinkedList@ANONYMOUS l_s7_4 = null;
  newList(l_s7_4);
  addFirst(l_s7_4, 8);
  addFirst(l_s7_4, 5);
  addFirst(l_s7_4, 13);
  assert ((l_s7_4.head.next.element) == 13); //Assert at dll_add.sk49:71 (-5797647111769428655)
  assert ((l_s7_4.head.next.previous) == (l_s7_4.head)); //Assert at dll_add.sk49:72 (1487167389274763148)
  assert ((l_s7_4.head.next.next.element) == 5); //Assert at dll_add.sk49:73 (2131137961432817677)
  assert ((l_s7_4.head.next.next.element) == 5); //Assert at dll_add.sk49:74 (6569690360242529976)
  assert ((l_s7_4.head.next.next.previous.element) == 13); //Assert at dll_add.sk49:75 (-8837632906527463269)
  assert ((l_s7_4.head.next.next.next.element) == 8); //Assert at dll_add.sk49:76 (-3291479997905831075)
  assert ((l_s7_4.head.next.next.next.element) == 8); //Assert at dll_add.sk49:77 (986396267332179749)
  assert ((l_s7_4.head.next.next.next.previous.element) == 5); //Assert at dll_add.sk49:78 (-6887464933315305877)
  assert ((l_s7_4.head.next.next.next.next) == (l_s7_4.head)); //Assert at dll_add.sk49:79 (7594879738991881057)
  assert ((l_s7_4.size) == 3); //Assert at dll_add.sk49:80 (-4541124699269027340)
}
/*dll_add.sk49:84*/

void addFrontHarness__Wrapper ()  implements addFrontHarness__WrapperNospec/*dll_add.sk49:84*/
{
  addFrontHarness();
}
/*dll_add.sk49:90*/

void addFrontHarness__WrapperNospec ()/*dll_add.sk49:90*/
{ }
/*dll_add.sk49:95*/

void newEntry (ref Entry _out_b)/*dll_add.sk49:95*/
{
  _out_b = null;
  _out_b = new Entry();
  _out_b.previous = null;
  _out_b.next = null;
  return;
}
/*dll_add.sk49:105*/

void newList (ref LinkedList _out_5)/*dll_add.sk49:105*/
{
  _out_5 = null;
  _out_5 = new LinkedList();
  Entry@ANONYMOUS _out_s11_6 = null;
  newEntry(_out_s11_6);
  _out_5.head = _out_s11_6;
  _out_5.head.next = _out_5.head;
  _out_5.head.previous = _out_5.head;
  _out_5.size = 0;
  return;
}
/* END PACKAGE ANONYMOUS*/
