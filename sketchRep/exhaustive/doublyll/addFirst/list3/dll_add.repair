/* BEGIN PACKAGE ANONYMOUS*/
struct Entry {
    int element;
    Entry next;
    Entry previous;
}
struct LinkedList {
    Entry head;
    int size;
}
/*dll_add.sk9:13*/

void addFirst (LinkedList l_7, int v_8)/*dll_add.sk9:13*/
{
  Entry@ANONYMOUS e_s9_a = null;
  newEntry(e_s9_a);
  e_s9_a.element = v_8;
  e_s9_a.next = l_7.head.next;
  l_7.head.next = e_s9_a;
  e_s9_a.previous = l_7.head;
  e_s9_a.next.previous = e_s9_a;
  l_7.size = (l_7.size) + 1;
}
/*dll_add.sk9:32*/

void addFrontHarness ()/*dll_add.sk9:32*/
{
  LinkedList@ANONYMOUS l_s1_1 = null;
  newList(l_s1_1);
  assert ((l_s1_1.size) == 0); //Assert at dll_add.sk9:38 (8579618380727993356)
  assert ((l_s1_1.head.next) == (l_s1_1.head)); //Assert at dll_add.sk9:39 (6311587624887880883)
  assert ((l_s1_1.head.previous) == (l_s1_1.head)); //Assert at dll_add.sk9:40 (-6374558399747935374)
  LinkedList@ANONYMOUS l_s3_2 = null;
  newList(l_s3_2);
  addFirst(l_s3_2, 8);
  assert ((l_s3_2.head.next.element) == 8); //Assert at dll_add.sk9:45 (8721615522759138479)
  assert ((l_s3_2.head.next.previous) == (l_s3_2.head)); //Assert at dll_add.sk9:46 (-8948931058209926976)
  assert ((l_s3_2.head.next.next) == (l_s3_2.head)); //Assert at dll_add.sk9:47 (3919336858896214772)
  assert ((l_s3_2.size) == 1); //Assert at dll_add.sk9:48 (-6917467933209063637)
  LinkedList@ANONYMOUS l_s5_3 = null;
  newList(l_s5_3);
  addFirst(l_s5_3, 8);
  addFirst(l_s5_3, 5);
  assert ((l_s5_3.head.next.element) == 5); //Assert at dll_add.sk9:54 (-7849139544420507692)
  assert ((l_s5_3.head.next.previous) == (l_s5_3.head)); //Assert at dll_add.sk9:55 (7017028976260545259)
  assert ((l_s5_3.head.next.next.element) == 8); //Assert at dll_add.sk9:56 (-5364086118160996027)
  assert ((l_s5_3.head.next.next.element) == 8); //Assert at dll_add.sk9:57 (-2308478472039028474)
  assert ((l_s5_3.head.next.next.previous.element) == 5); //Assert at dll_add.sk9:58 (548185351853209640)
  assert ((l_s5_3.head.next.next.next) == (l_s5_3.head)); //Assert at dll_add.sk9:59 (-5566295637030092274)
  assert ((l_s5_3.size) == 2); //Assert at dll_add.sk9:60 (-3090665564366799874)
  LinkedList@ANONYMOUS l_s7_4 = null;
  newList(l_s7_4);
  addFirst(l_s7_4, 8);
  addFirst(l_s7_4, 5);
  addFirst(l_s7_4, 13);
  assert ((l_s7_4.head.next.element) == 13); //Assert at dll_add.sk9:67 (-62703064188448962)
  assert ((l_s7_4.head.next.previous) == (l_s7_4.head)); //Assert at dll_add.sk9:68 (-4825367342199897768)
  assert ((l_s7_4.head.next.next.element) == 5); //Assert at dll_add.sk9:69 (2560912248428577776)
  assert ((l_s7_4.head.next.next.element) == 5); //Assert at dll_add.sk9:70 (2003782880632427638)
  assert ((l_s7_4.head.next.next.previous.element) == 13); //Assert at dll_add.sk9:71 (-846496467664777778)
  assert ((l_s7_4.head.next.next.next.element) == 8); //Assert at dll_add.sk9:72 (-4764995341332405815)
  assert ((l_s7_4.head.next.next.next.element) == 8); //Assert at dll_add.sk9:73 (4026344319959379443)
  assert ((l_s7_4.head.next.next.next.previous.element) == 5); //Assert at dll_add.sk9:74 (3457117815052079595)
  assert ((l_s7_4.head.next.next.next.next) == (l_s7_4.head)); //Assert at dll_add.sk9:75 (-1642469416995420789)
  assert ((l_s7_4.size) == 3); //Assert at dll_add.sk9:76 (-6761382454686980985)
}
/*dll_add.sk9:80*/

void addFrontHarness__Wrapper ()  implements addFrontHarness__WrapperNospec/*dll_add.sk9:80*/
{
  addFrontHarness();
}
/*dll_add.sk9:86*/

void addFrontHarness__WrapperNospec ()/*dll_add.sk9:86*/
{ }
/*dll_add.sk9:91*/

void newEntry (ref Entry _out_b)/*dll_add.sk9:91*/
{
  _out_b = null;
  _out_b = new Entry();
  _out_b.previous = null;
  _out_b.next = null;
  return;
}
/*dll_add.sk9:101*/

void newList (ref LinkedList _out_5)/*dll_add.sk9:101*/
{
  _out_5 = null;
  _out_5 = new LinkedList();
  Entry@ANONYMOUS _out_s11_6 = null;
  newEntry(_out_s11_6);
  _out_5.head = _out_s11_6;
  _out_5.head.next = _out_5.head;
  _out_5.head.previous = _out_5.head;
  _out_5.size = 0;
  return;
}
/* END PACKAGE ANONYMOUS*/
