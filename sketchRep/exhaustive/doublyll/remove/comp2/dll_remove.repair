/* BEGIN PACKAGE ANONYMOUS*/
struct Entry {
    int element;
    Entry next;
    Entry previous;
}
struct LinkedList {
    Entry head;
    int size;
}
/*dll_remove.sk66:13*/

void addFirst (LinkedList l_1b, int v_1c)/*dll_remove.sk66:13*/
{
  Entry@ANONYMOUS e_s40_1e = null;
  newEntry(e_s40_1e);
  e_s40_1e.element = v_1c;
  e_s40_1e.next = l_1b.head.next;
  e_s40_1e.previous = l_1b.head;
  e_s40_1e.previous.next = e_s40_1e;
  e_s40_1e.next.previous = e_s40_1e;
  l_1b.size = (l_1b.size) + 1;
}
/*dll_remove.sk66:28*/

void newEntry (ref Entry _out_1f)/*dll_remove.sk66:28*/
{
  _out_1f = null;
  _out_1f = new Entry();
  _out_1f.previous = null;
  _out_1f.next = null;
  return;
}
/*dll_remove.sk66:38*/

void newList (ref LinkedList _out_14)/*dll_remove.sk66:38*/
{
  _out_14 = null;
  _out_14 = new LinkedList();
  Entry@ANONYMOUS _out_s42_15 = null;
  newEntry(_out_s42_15);
  _out_14.head = _out_s42_15;
  _out_14.head.next = _out_14.head;
  _out_14.head.previous = _out_14.head;
  _out_14.size = 0;
  return;
}
/*dll_remove.sk66:52*/

void remove (LinkedList l_16, int v_17, ref int _out_18)/*dll_remove.sk66:52*/
{
  _out_18 = 0;
  Entry@ANONYMOUS e_19 = l_16.head.next;
  bit __sa0_1a = e_19 != (l_16.head);
  while(__sa0_1a)
  {
    if((e_19.element) != v_17)/*dll_remove.sk66:66*/
    {
      e_19 = e_19.next;
    }
    else
    {
      l_16.size = (l_16.size) - 1;
      _out_18 = 0;
      Entry@ANONYMOUS _tmprhs_s1 = e_19.previous;
      e_19.next.previous = _tmprhs_s1;
      Entry@ANONYMOUS _tmprhs_s4 = e_19.next;
      e_19.previous.next = _tmprhs_s4;
      return;
    }
    __sa0_1a = e_19 != (l_16.head);
  }
  _out_18 = 1;
  return;
}
/*dll_remove.sk66:98*/

void removeHarness ()/*dll_remove.sk66:98*/
{
  LinkedList@ANONYMOUS l_s2_1 = null;
  newList(l_s2_1);
  assert ((l_s2_1.size) == 0); //Assert at dll_remove.sk66:104 (-4363584123984800533)
  assert ((l_s2_1.head.next) == (l_s2_1.head)); //Assert at dll_remove.sk66:105 (-850910114497179465)
  assert ((l_s2_1.head.previous) == (l_s2_1.head)); //Assert at dll_remove.sk66:106 (-1546402466083929616)
  LinkedList@ANONYMOUS l_s4_2 = null;
  newList(l_s4_2);
  int _out_s6_3 = 0;
  remove(l_s4_2, 8, _out_s6_3);
  assert (_out_s6_3 == 1); //Assert at dll_remove.sk66:112 (8476895622624692006)
  assert ((l_s4_2.head.next) == (l_s4_2.head)); //Assert at dll_remove.sk66:113 (-2108163095619082461)
  assert ((l_s4_2.head.previous) == (l_s4_2.head)); //Assert at dll_remove.sk66:114 (671564488735139045)
  assert ((l_s4_2.size) == 0); //Assert at dll_remove.sk66:115 (2510754436165407405)
  LinkedList@ANONYMOUS l_s8_4 = null;
  newList(l_s8_4);
  addFirst(l_s8_4, 8);
  int _out_s10_5 = 0;
  remove(l_s8_4, 8, _out_s10_5);
  assert (_out_s10_5 == 0); //Assert at dll_remove.sk66:122 (-7311471246197427117)
  assert ((l_s8_4.head.next) == (l_s8_4.head)); //Assert at dll_remove.sk66:123 (1068711623980803470)
  assert ((l_s8_4.head.previous) == (l_s8_4.head)); //Assert at dll_remove.sk66:124 (7188633816167158366)
  assert ((l_s8_4.size) == 0); //Assert at dll_remove.sk66:125 (7882944221167055527)
  LinkedList@ANONYMOUS l_s12_6 = null;
  newList(l_s12_6);
  addFirst(l_s12_6, 8);
  addFirst(l_s12_6, 5);
  int _out_s14_7 = 0;
  remove(l_s12_6, 5, _out_s14_7);
  assert (_out_s14_7 == 0); //Assert at dll_remove.sk66:133 (8761436735380312186)
  assert ((l_s12_6.head.next.element) == 8); //Assert at dll_remove.sk66:134 (9024342549726488230)
  assert ((l_s12_6.head.next.next) == (l_s12_6.head)); //Assert at dll_remove.sk66:135 (6504371827518613456)
  assert ((l_s12_6.head.next.previous) == (l_s12_6.head)); //Assert at dll_remove.sk66:136 (-2152800200125728760)
  assert ((l_s12_6.size) == 1); //Assert at dll_remove.sk66:137 (-7785013802530159539)
  LinkedList@ANONYMOUS l_s16_8 = null;
  newList(l_s16_8);
  addFirst(l_s16_8, 5);
  addFirst(l_s16_8, 8);
  int _out_s18_9 = 0;
  remove(l_s16_8, 5, _out_s18_9);
  assert (_out_s18_9 == 0); //Assert at dll_remove.sk66:145 (-46295579945212191)
  assert ((l_s16_8.head.next.element) == 8); //Assert at dll_remove.sk66:146 (-6746358577313792801)
  assert ((l_s16_8.head.next.next) == (l_s16_8.head)); //Assert at dll_remove.sk66:147 (5628409601913950643)
  assert ((l_s16_8.head.next.previous) == (l_s16_8.head)); //Assert at dll_remove.sk66:148 (-460972444992583330)
  assert ((l_s16_8.size) == 1); //Assert at dll_remove.sk66:149 (-1074518416267795839)
  LinkedList@ANONYMOUS l_s20_a = null;
  newList(l_s20_a);
  addFirst(l_s20_a, 5);
  addFirst(l_s20_a, 8);
  int _out_s22_b = 0;
  remove(l_s20_a, 13, _out_s22_b);
  assert (_out_s22_b == 1); //Assert at dll_remove.sk66:157 (-7415736584591356176)
  assert ((l_s20_a.head.next.element) == 8); //Assert at dll_remove.sk66:158 (-8637541051664114827)
  assert ((l_s20_a.head.next.next.element) == 5); //Assert at dll_remove.sk66:159 (7222875238631147379)
  assert ((l_s20_a.head.next.previous) == (l_s20_a.head)); //Assert at dll_remove.sk66:160 (3507686437750024025)
  assert ((l_s20_a.head.next.next.element) == 5); //Assert at dll_remove.sk66:161 (-5152711662293965260)
  assert ((l_s20_a.head.next.next.next) == (l_s20_a.head)); //Assert at dll_remove.sk66:162 (9005287639308066933)
  assert ((l_s20_a.head.next.next.previous.element) == 8); //Assert at dll_remove.sk66:163 (-1542863578214024477)
  assert ((l_s20_a.size) == 2); //Assert at dll_remove.sk66:164 (-1934214641123130579)
  LinkedList@ANONYMOUS l_s24_c = null;
  newList(l_s24_c);
  addFirst(l_s24_c, 5);
  addFirst(l_s24_c, 8);
  addFirst(l_s24_c, 13);
  int _out_s26_d = 0;
  remove(l_s24_c, 8, _out_s26_d);
  assert (_out_s26_d == 0); //Assert at dll_remove.sk66:173 (-990304815626629139)
  assert ((l_s24_c.head.next.element) == 13); //Assert at dll_remove.sk66:174 (-1708820889809274196)
  assert ((l_s24_c.head.next.previous) == (l_s24_c.head)); //Assert at dll_remove.sk66:175 (500770756040704450)
  assert ((l_s24_c.head.next.next.element) == 5); //Assert at dll_remove.sk66:176 (9099476614943865210)
  assert ((l_s24_c.head.next.next.element) == 5); //Assert at dll_remove.sk66:177 (-4959674306962139931)
  assert ((l_s24_c.head.next.next.previous.element) == 13); //Assert at dll_remove.sk66:178 (-8013141557747704434)
  assert ((l_s24_c.head.next.next.next) == (l_s24_c.head)); //Assert at dll_remove.sk66:179 (-4473767430830620570)
  assert ((l_s24_c.size) == 2); //Assert at dll_remove.sk66:180 (-365500104137233815)
  LinkedList@ANONYMOUS l_s28_e = null;
  newList(l_s28_e);
  addFirst(l_s28_e, 5);
  addFirst(l_s28_e, 8);
  addFirst(l_s28_e, 13);
  int _out_s30_f = 0;
  remove(l_s28_e, 5, _out_s30_f);
  assert (_out_s30_f == 0); //Assert at dll_remove.sk66:189 (7776554189043692675)
  assert ((l_s28_e.head.next.element) == 13); //Assert at dll_remove.sk66:190 (-5330922672002237619)
  assert ((l_s28_e.head.next.previous) == (l_s28_e.head)); //Assert at dll_remove.sk66:191 (9055692154082121059)
  assert ((l_s28_e.head.next.next.element) == 8); //Assert at dll_remove.sk66:192 (3872920604881173643)
  assert ((l_s28_e.head.next.next.element) == 8); //Assert at dll_remove.sk66:193 (-9223366311110571451)
  assert ((l_s28_e.head.next.next.previous.element) == 13); //Assert at dll_remove.sk66:194 (-2398741155849158269)
  assert ((l_s28_e.head.next.next.next) == (l_s28_e.head)); //Assert at dll_remove.sk66:195 (5902800476966462522)
  assert ((l_s28_e.size) == 2); //Assert at dll_remove.sk66:196 (1205246602879918559)
  LinkedList@ANONYMOUS l_s32_10 = null;
  newList(l_s32_10);
  addFirst(l_s32_10, 5);
  addFirst(l_s32_10, 8);
  addFirst(l_s32_10, 13);
  int _out_s34_11 = 0;
  remove(l_s32_10, 13, _out_s34_11);
  assert (_out_s34_11 == 0); //Assert at dll_remove.sk66:205 (-3523810917950734912)
  assert ((l_s32_10.head.next.element) == 8); //Assert at dll_remove.sk66:206 (-707643093932743556)
  assert ((l_s32_10.head.next.previous) == (l_s32_10.head)); //Assert at dll_remove.sk66:207 (2811787086574822742)
  assert ((l_s32_10.head.next.next.element) == 5); //Assert at dll_remove.sk66:208 (-4683019583747074308)
  assert ((l_s32_10.head.next.next.element) == 5); //Assert at dll_remove.sk66:209 (-1589449701077832663)
  assert ((l_s32_10.head.next.next.previous.element) == 8); //Assert at dll_remove.sk66:210 (7042210648006550768)
  assert ((l_s32_10.head.next.next.next) == (l_s32_10.head)); //Assert at dll_remove.sk66:211 (3936251671633423754)
  assert ((l_s32_10.size) == 2); //Assert at dll_remove.sk66:212 (5136311052642660763)
  LinkedList@ANONYMOUS l_s36_12 = null;
  newList(l_s36_12);
  addFirst(l_s36_12, 5);
  addFirst(l_s36_12, 8);
  addFirst(l_s36_12, 13);
  int _out_s38_13 = 0;
  remove(l_s36_12, 4, _out_s38_13);
  assert (_out_s38_13 == 1); //Assert at dll_remove.sk66:221 (-3934157739778755959)
  assert ((l_s36_12.head.next.element) == 13); //Assert at dll_remove.sk66:222 (8397609580253555111)
  assert ((l_s36_12.head.next.previous) == (l_s36_12.head)); //Assert at dll_remove.sk66:223 (-820438245459457698)
  assert ((l_s36_12.head.next.next.element) == 8); //Assert at dll_remove.sk66:224 (-3327531216765053961)
  assert ((l_s36_12.head.next.next.element) == 8); //Assert at dll_remove.sk66:225 (-2296236932477909110)
  assert ((l_s36_12.head.next.next.previous.element) == 13); //Assert at dll_remove.sk66:226 (4548118233293351112)
  assert ((l_s36_12.head.next.next.next.element) == 5); //Assert at dll_remove.sk66:227 (560157612667776389)
  assert ((l_s36_12.head.next.next.next.element) == 5); //Assert at dll_remove.sk66:228 (2770688446872007274)
  assert ((l_s36_12.head.next.next.next.previous.element) == 8); //Assert at dll_remove.sk66:229 (2106393973175518459)
  assert ((l_s36_12.head.next.next.next.next) == (l_s36_12.head)); //Assert at dll_remove.sk66:230 (-3250244363992942355)
  assert ((l_s36_12.size) == 3); //Assert at dll_remove.sk66:231 (-6458364148528401900)
}
/*dll_remove.sk66:235*/

void removeHarness__Wrapper ()  implements removeHarness__WrapperNospec/*dll_remove.sk66:235*/
{
  removeHarness();
}
/*dll_remove.sk66:241*/

void removeHarness__WrapperNospec ()/*dll_remove.sk66:241*/
{ }
/* END PACKAGE ANONYMOUS*/
